"0","library(optimx)"
"0",""
"0","# Define logistic loss"
"0","compute_loss <- function(X, y, theta, loss_type) {"
"0","  scores <- X %*% theta"
"0","  probs <- 1 / (1 + exp(-scores))"
"0","  eps <- 1e-6"
"0","  "
"0","  if (loss_type == ""logistic"") {"
"0","    return(mean(log(1 + exp(-y * scores))))"
"0","  } else if (loss_type == ""cross-entropy"") {"
"0","    return(-mean(y * log(probs + eps) + (1 - y) * log(1 - probs + eps)))"
"0","  }"
"0","}"
"0",""
"0","# Define the training function"
"0","train_optimx <- function(X, y, method = ""BFGS"", loss_type = ""logistic"") {"
"0","  X <- as.matrix(X)"
"0","  y <- as.numeric(y)"
"0","  theta_init <- rep(0, ncol(X))"
"0","  "
"0","  # Loss function for optimizer"
"0","  loss_fn <- function(theta) {"
"0","    compute_loss(X, y, theta, loss_type)"
"0","  }"
"0","  "
"0","  result <- optimx(par = theta_init, fn = loss_fn, method = method)"
"0","  return(result)"
"0","}"
